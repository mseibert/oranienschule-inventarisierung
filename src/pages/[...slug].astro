---
import Inventar from '../components/Inventar.astro';
import Layout from '../layouts/Layout.astro';
import { getSeatableMetadata, getInventarListWithImages } from '../lib/seatable';

interface SeatableMetadata {
  app_name: string;
  access_token: string;
  dtable_uuid: string;
  dtable_server: string;
  dtable_socket: string;
  dtable_db: string;
  workspace_id: number;
  dtable_name: string;
  use_api_gateway: boolean;
}

export interface inventarTeil {
  results: Array<{
    Name: string;
    Bezeichnung: string;
    Kategorie: string;
    'Hersteller/Marke/Autor/Komponist': string;
    Modell: string;
    Seriennummer: string;
    Anschaffungsdatum: string | null;
    Anschaffungskosten: number;
    Bild: string | null;
    Bilddownload: string[] | null;
    Zustand: string | null;
    'Letzte Wartung': string | null;
    Verleihstatus: string;
    Verantwortlich: string;
    Bemerkungen: string;
    'QR-Code': string | null;
    teil?: string | null;
    _locked: null;
    _locked_by: null;
    _archived: boolean;
    _creator: string;
    _ctime: string;
    _last_modifier: string;
    _mtime: string;
    _id: string;
  }>;
}

export async function getStaticPaths() {
  const token = import.meta.env.SEATABLE_API_TOKEN;
  const seatableMetadata = await getSeatableMetadata(token);
  const inventarList = await getInventarListWithImages(seatableMetadata);

  type Page = {
    slug: string | undefined;
    title: string;
    text: string;
    qrcode: string | null;
    teil: string | undefined;
    item?: any;
  };

  const pages: Page[] = [
    ...inventarList.results.map(item => ({
      slug: `${item._id}`,
      title: item.Name,
      text: item.Bezeichnung,
      qrcode: item['QR-Code'],
      teil: item['QR-Code'] ? new URL(item['QR-Code']).pathname.split('/').pop() : 'keine Nummer gefunden',
      item: item
    }))
  ];

  return pages.flatMap(({ slug, title, text, item, teil }) => [
    {
      params: { slug },
      props: { title, text, item, teil },
    },
    {
      params: { slug: teil },
      props: { title, text, item, teil },
      redirect: `${slug}`
    }
  ]);
}

const allPages = await getStaticPaths();
const { title, text, item, teil } = Astro.props;
---
<Layout title={`${item?.Bezeichnung} (${item?.Name} ${teil ? '#' + teil.slice(4) : ''}) - Inventar der Oranienschule, Wiesbaden`}>
	<Inventar item={item} teil={teil} />
</Layout>