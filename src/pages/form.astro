---
export const prerender = false; // Not needed in 'server' mode

// import { isRegistered, registerUser } from "../data/users"
// import { isValidEmail } from "../utils/isValidEmail";
import Layout from '../layouts/Layout.astro';

const errors = { username: "", email: "", password: "" };
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const name = data.get("username");
    const email = data.get("email");
    const password = data.get("password");
    if (typeof name !== "string" || name.length < 1) {
      errors.username += "Please enter a username. ";
    }
    // if (typeof email !== "string" || !isValidEmail(email)) {
	if (typeof email !== "string" || email.length < 1) {
      errors.email += "Please enter an email. ";
    }
    if (typeof password !== "string" || password.length < 6) {
      errors.password += "Password must be at least 6 characters. ";
    }
    const hasErrors = Object.values(errors).some(msg => msg)
    if (!hasErrors) {
      // await registerUser({name, email, password});
      const usernameInput = document.querySelector('input[name=username]') as HTMLInputElement;
      const emailInput = document.querySelector('input[name=email]') as HTMLInputElement;
      const passwordInput = document.querySelector('input[name=password]') as HTMLInputElement;
      console.log('Form submitted:', {
        username: usernameInput?.value || '',
        email: emailInput?.value || '',
        password: passwordInput?.value || ''
      });
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---
<Layout>
<div class="max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg">
  <h1 class="text-3xl font-bold mb-8 text-gray-800 text-center">Register</h1>
  <form method="POST" class="space-y-6">
    <div class="space-y-2">
      <label class="block text-lg font-medium text-gray-700">
        Username:
        <input 
          type="text" 
          name="username" 
          class="mt-2 block w-full rounded-lg border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-lg p-3"
        />
      </label>
      {errors.username && <p class="text-red-500 text-sm mt-1">{errors.username}</p>}
    </div>

    <div class="space-y-2">
      <label class="block text-lg font-medium text-gray-700">
        Email:
        <input 
          type="email" 
          name="email" 
          required 
          class="mt-2 block w-full rounded-lg border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-lg p-3"
        />
      </label>
      {errors.email && <p class="text-red-500 text-sm mt-1">{errors.email}</p>}
    </div>

    <div class="space-y-2">
      <label class="block text-lg font-medium text-gray-700">
        Password:
        <input 
          type="password" 
          name="password" 
          required 
          minlength="6" 
          class="mt-2 block w-full rounded-lg border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-lg p-3"
        />
      </label>
      {errors.password && <p class="text-red-500 text-sm mt-1">{errors.password}</p>}
    </div>

    <button 
      type="submit"
      class="w-full bg-orange-500 text-white py-3 px-6 rounded-lg text-lg font-semibold hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 transition-colors mt-8"
      id="submitButton"
    >
      Register
    </button>
  </form>
</div>

<script>
  document.getElementById('submitButton')?.addEventListener('click', async (e) => {
    e.preventDefault();
    const usernameInput = document.querySelector('input[name=username]') as HTMLInputElement;
    const emailInput = document.querySelector('input[name=email]') as HTMLInputElement;
    const passwordInput = document.querySelector('input[name=password]') as HTMLInputElement;
    
    try {
      await fetch('/api/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          username: usernameInput?.value || '',
          email: emailInput?.value || '',
          password: passwordInput?.value || ''
        })
      });
    } catch (error) {
      console.error('Error submitting form:', error);
    }
  });
</script>
</Layout>